<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"
    integrity="sha512-ElRFoEQdI5Ht6kZvyzXhYG9NqjtkmlkfYk0wr6wHxU9JEHakS7UJZNeml5ALk+8IKlU6jDgMabC3vkumRokgJA=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<div class="main--content">
    <h1 class="pt-4"> Dash </h1>
    <div class="row py-4">

        <div class="col-12 col-md-6 col-lg-3 py-4">
            <div class="card card-1">
                <div class="card--data">
                    <div class="card--content">
                        <h5 class="card--title">Total Users</h5>
                        <h1>{{totalUser}}</h1>
                    </div>
                    <i class="ri-user-2-line card--icon--lg"></i>
                </div>
                <div class="card--stats">
                    <span><i class="ri-bar-chart-fill card--icon stat--icon"></i>65%</span>
                    <span><i class="ri-arrow-up-s-fill card--icon up--arrow"></i>10</span>
                    <span><i class="ri-arrow-down-s-fill card--icon down--arrow"></i>2</span>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-3 py-4">
            <div class="card card-2">
                <div class="card--data">
                    <div class="card--content">
                        <h5 class="card--title">Total Products</h5>
                        <h1>{{totalProducts}}</h1>
                    </div>
                    <i class="ri-archive-line card--icon--lg"></i>
                </div>
                <div class="card--stats">
                    <span><i class="ri-bar-chart-fill card--icon stat--icon"></i>82%</span>
                    <span><i class="ri-arrow-up-s-fill card--icon up--arrow"></i>230</span>
                    <span><i class="ri-arrow-down-s-fill card--icon down--arrow"></i>45</span>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-3 py-4">
            <div class="card card-3">
                <div class="card--data">
                    <div class="card--content">
                        <h5 class="card--title">Total Orders</h5>
                        <h1>{{totalOrders}}</h1>
                    </div>
                    <i class="ri-inbox-archive-line card--icon--lg"></i>
                </div>
                <div class="card--stats">
                    <span><i class="ri-bar-chart-fill card--icon stat--icon"></i>27%</span>
                    <span><i class="ri-arrow-up-s-fill card--icon up--arrow"></i>31</span>
                    <span><i class="ri-arrow-down-s-fill card--icon down--arrow"></i>23</span>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-3 py-4">
            <div class="card card-4">
                <div class="card--data">
                    <div class="card--content">
                        <h5 class="card--title">Total Payement</h5>
                        <h1>15</h1>
                    </div>
                    <i class="ri-money-dollar-circle-line card--icon--lg"></i>
                </div>
                <div class="card--stats">
                    <span><i class="ri-bar-chart-fill card--icon stat--icon"></i>8%</span>
                    <span><i class="ri-arrow-up-s-fill card--icon up--arrow"></i>11</span>
                    <span><i class="ri-arrow-down-s-fill card--icon down--arrow"></i>2</span>
                </div>
            </div>
        </div>
    </div>
    <h4>Over view</h4>
    <button type="button" class="btn btn-primary" onclick="tableToCSV()">
        download CSV
    </button>
    <div class="row">
        <div class="col-12 col-md-6 py-4">
            <canvas id="sales-chart" style="max-width:30vw; max-height:40vh;">

            </canvas>
        </div>
        <div class="col-12 col-md-6 py-4">
            <canvas id="orders-chart" style="max-width:30vw; max-height:40vh;">

            </canvas>
        </div>
        <div class="col-12 col-md-6 py-4">
            <canvas id="payment-chart" style="max-width:30vw; max-height:40vh;">

            </canvas>
        </div>
        <div class="col-12 col-md-6 py-4" style="display:none;">
            <table>
                <thead>
                    <th>Total Orders</th>
                    <th>onlinePayments</th>
                    <th>COD</th>
                    <th>Total Sales</th>
                </thead>
                <tbody>
                    <td>{{totalOrders}}</td>
                    <td>{{onlinePayments}}</td>
                    <td>{{cod}}</td>
                    <td>{{totalSales}}</td>
                </tbody>
            </table>


        </div>
    </div>
    <script type="text/javascript">
        function tableToCSV() {

            // Variable to store the final csv data
            var csv_data = [];

            // Get each row data
            var rows = document.getElementsByTagName('tr');
            for (var i = 0; i < rows.length; i++) {

                // Get each column data
                var cols = rows[i].querySelectorAll('td,th');

                // Stores each csv row data
                var csvrow = [];
                for (var j = 0; j < cols.length; j++) {

                    // Get the text data of each cell
                    // of a row and push it to csvrow
                    csvrow.push(cols[j].innerHTML);
                }

                // Combine each column value with comma
                csv_data.push(csvrow.join(","));
            }

            // Combine each row data with new line character
            csv_data = csv_data.join('\n');

            // Call this function to download csv file 
            downloadCSVFile(csv_data);

        }

        function downloadCSVFile(csv_data) {

            // Create CSV file object and feed
            // our csv_data into it
            CSVFile = new Blob([csv_data], {
                type: "text/csv"
            });

            // Create to temporary link to initiate
            // download process
            var temp_link = document.createElement('a');

            // Download csv file
            temp_link.download = "salesreport.csv";
            var url = window.URL.createObjectURL(CSVFile);
            temp_link.href = url;

            // This link should not be displayed
            temp_link.style.display = "none";
            document.body.appendChild(temp_link);

            // Automatically click the link to
            // trigger download
            temp_link.click();
            document.body.removeChild(temp_link);
        }
    </script>
    <script>
        $(document).ready(function () {
            axios.get('/admin/data').then(e => {


                const ctx = document.getElementById('sales-chart').getContext('2d');
                const myChart = new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        labels: ['paid', 'UnPaid',],
                        datasets: [{
                            label: '# of Votes',
                            data: [e.data.paidOrders, e.data.unpaidOrders],
                            backgroundColor: [
                                'rgba(0, 255, 0, 0.3)',
                                'rgba(54, 162, 235, 0.2)',

                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                            ],
                            borderWidth: 0
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
                const ctx2 = document.getElementById('orders-chart').getContext('2d');
                const myChart2 = new Chart(ctx2, {
                    type: 'doughnut',
                    data: {
                        labels: ['Online Payement', 'COD',],
                        datasets: [{
                            label: '# of Votes',
                            data: [e.data.onlinePayments, e.data.cod],
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',

                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                            ],
                            borderWidth: 0
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
                const ctx3 = document.getElementById('payment-chart').getContext('2d');
                const myChart3 = new Chart(ctx3, {
                    type: 'doughnut',
                    data: {
                        labels: ['Confrim Orders', 'Out of Delivery', 'Delivered', 'Canceled Orders'],
                        datasets: [{
                            label: '# of Votes',
                            data: [e.data.confirmedOrders, e.data.outOfDelivery, e.data.delivered, e.data.canceledOrders],
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(255,255,0,0.3)',
                                'rgba(0, 255, 0, 0.3)',
                                'rgba(255, 0, 0, 0.5)',

                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                            ],
                            borderWidth: 0
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            })
        })
    </script>